diff -r 497d2879f4de make/build.xml
--- a/make/build.xml	Fri Jul 31 08:31:48 2015 +0200
+++ b/make/build.xml	Fri Jul 31 08:32:44 2015 +0200
@@ -192,7 +192,7 @@
             debug="true" debuglevel="source,lines"
             srcdir="${src.classes.dir}"
             destdir="${build.classes.dir}"
-            classpath="${build.classes.dir}:${javatest.jar}:${junit.jar}:${testng.jar}"
+            classpath="${build.classes.dir}:${javatest.jar}:${jh.jar}:${junit.jar}:${testng.jar}"
             includeantruntime="true">
             <compilerarg line="-Xlint:all"/>
             <patternset refid="jtreg.packages"/>
diff -r 497d2879f4de src/share/classes/com/sun/javatest/regtest/Action.java
--- a/src/share/classes/com/sun/javatest/regtest/Action.java	Fri Jul 31 08:31:48 2015 +0200
+++ b/src/share/classes/com/sun/javatest/regtest/Action.java	Fri Jul 31 08:32:44 2015 +0200
@@ -254,6 +254,12 @@
      * </pre>
      */
     protected void startAction() {
+        ActionCallBack callBack = script.getCallBack();
+
+        if (callBack != null) {
+            callBack.actionStarted(this);
+        }
+
         String name = getName();
         section = script.getTestResult().createSection(name);
 
@@ -278,6 +284,12 @@
         pw.println(LOG_ELAPSED_TIME + ((double) elapsedTime/1000.0));
         recorder.close();
         section.setStatus(status);
+
+        ActionCallBack callBack = script.getCallBack();
+
+        if (callBack != null) {
+            callBack.actionEnded(this);
+        }
     } // endAction()
 
     //----------workarounds-------------------------------------------------------
diff -r 497d2879f4de src/share/classes/com/sun/javatest/regtest/ActionCallBack.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/src/share/classes/com/sun/javatest/regtest/ActionCallBack.java	Fri Jul 31 08:32:44 2015 +0200
@@ -0,0 +1,38 @@
+/*
+ * Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.  Oracle designates this
+ * particular file as subject to the "Classpath" exception as provided
+ * by Oracle in the LICENSE file that accompanied this code.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+package com.sun.javatest.regtest;
+
+import java.util.Collection;
+
+public interface ActionCallBack {
+
+    public void actionStarted(Action action);
+
+    public Collection<? extends String> getAdditionalVMJavaOptions(Action action);
+
+    public void actionEnded(Action action);
+
+}
diff -r 497d2879f4de src/share/classes/com/sun/javatest/regtest/CompileAction.java
--- a/src/share/classes/com/sun/javatest/regtest/CompileAction.java	Fri Jul 31 08:31:48 2015 +0200
+++ b/src/share/classes/com/sun/javatest/regtest/CompileAction.java	Fri Jul 31 08:32:44 2015 +0200
@@ -417,6 +417,12 @@
         String javacCmd = script.getJavacProg();
 
         List<String> javacVMOpts = new ArrayList<String>();
+        ActionCallBack callBack = script.getCallBack();
+
+        if (callBack != null) {
+            javacVMOpts.addAll(callBack.getAdditionalVMJavaOptions(this));
+        }
+
         javacVMOpts.addAll(script.getTestVMOptions());
         if (script.getCompileJDK().equals(script.getTestJDK()))
             javacVMOpts.addAll(script.getTestDebugOptions());
diff -r 497d2879f4de src/share/classes/com/sun/javatest/regtest/Main.java
--- a/src/share/classes/com/sun/javatest/regtest/Main.java	Fri Jul 31 08:31:48 2015 +0200
+++ b/src/share/classes/com/sun/javatest/regtest/Main.java	Fri Jul 31 08:32:44 2015 +0200
@@ -1071,6 +1071,8 @@
         return run();
     }
 
+    public static ActionCallBack callBack;
+
     private int run() throws BadArgs, Fault, Harness.Fault, InterruptedException {
         findSystemJarFiles();
 
@@ -2014,6 +2016,8 @@
             if (nativeDirArg != null)
                 rp.setNativeDir(nativeDirArg);
 
+            rp.setCallBack(callBack);
+
             return rp;
         } catch (TestSuite.Fault f) {
             // TODO: fix bad string -- need more helpful resource here
diff -r 497d2879f4de src/share/classes/com/sun/javatest/regtest/MainAction.java
--- a/src/share/classes/com/sun/javatest/regtest/MainAction.java	Fri Jul 31 08:31:48 2015 +0200
+++ b/src/share/classes/com/sun/javatest/regtest/MainAction.java	Fri Jul 31 08:32:44 2015 +0200
@@ -386,6 +386,12 @@
         javaOpts.addAll(updateAddExports(script.getTestVMJavaOptions(), script.getModules()));
         javaOpts.addAll(script.getTestDebugOptions());
 
+        ActionCallBack callBack = script.getCallBack();
+
+        if (callBack != null) {
+            javaOpts.addAll(callBack.getAdditionalVMJavaOptions(this));
+        }
+
         Map<String, String> javaProps = new LinkedHashMap<String, String>();
         javaProps.putAll(script.getTestProperties());
 
diff -r 497d2879f4de src/share/classes/com/sun/javatest/regtest/RegressionParameters.java
--- a/src/share/classes/com/sun/javatest/regtest/RegressionParameters.java	Fri Jul 31 08:31:48 2015 +0200
+++ b/src/share/classes/com/sun/javatest/regtest/RegressionParameters.java	Fri Jul 31 08:32:44 2015 +0200
@@ -951,4 +951,14 @@
     private final Set<Integer> retainStatusSet = new HashSet<Integer>(4);
     private Pattern retainFilesPattern;
 
+    private ActionCallBack callBack;
+
+    public ActionCallBack getCallBack() {
+        return callBack;
+    }
+
+    public void setCallBack(ActionCallBack callBack) {
+        this.callBack = callBack;
+    }
+
 }
diff -r 497d2879f4de src/share/classes/com/sun/javatest/regtest/RegressionScript.java
--- a/src/share/classes/com/sun/javatest/regtest/RegressionScript.java	Fri Jul 31 08:31:48 2015 +0200
+++ b/src/share/classes/com/sun/javatest/regtest/RegressionScript.java	Fri Jul 31 08:32:44 2015 +0200
@@ -708,6 +708,10 @@
         return params.getCompileJDK().getJavacProg().getPath();
     }
 
+    ActionCallBack getCallBack() {
+        return params.getCallBack();
+    }
+
     //--------------------------------------------------------------------------
 
     // Get the standard properties to be set for tests
