<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="org.netbeans.modules.jdk.jtreg.lib" default="netbeans" basedir=".">
    <description>Builds, tests, and runs the project org.netbeans.modules.jdk.jtreg.lib.</description>
    <import file="nbproject/build-impl.xml"/>
    <target name="build-init" depends="harness.build-init,-download-jtharness,-download-asmtools,-download-jtreg,-download-jcov,-download-asm">
        <ant dir="jtharness-src-${jtharness.changeset}/build" inheritAll="false" useNativeBasedir="true">
             <target name="clean" />
             <target name="jar" />
             <property name="BUILD_DIR" location="${build.dir}/jtharness" />
             <property name="servletjar" location="${nbplatform.active.dir}/ide/modules/ext/servlet-2.2.jar" />
        </ant>
        <copy file="${build.dir}/jtharness/binaries/lib/javatest.jar" todir="release/modules/ext" />
        <ant dir="asmtools-src-${asmtools.changeset}/build" inheritAll="false" useNativeBasedir="true">
             <target name="clean" />
             <target name="build" />
             <property name="BUILD_DIR" location="${build.dir}/asmtools-6.0-build" />
        </ant>
        <copy file="${build.dir}/asmtools-6.0-build/binaries/lib/asmtools.jar" todir="release/modules/ext" />
        <path id="junit.path">
            <fileset dir="${nbplatform.active.dir}/platform/modules/ext">
                <include name="junit-4.*.jar"/>
            </fileset>
        </path>
        <ant dir="jtreg-src-${jtreg.changeset}/make" inheritAll="false" useNativeBasedir="true">
             <target name="clean" />
             <target name="build" />
             <property name="jh.jar" location="${nbplatform.active.dir}/platform/modules/ext/jhall-2.0_05.jar" />
             <property name="jhall.jar" location="${nbplatform.active.dir}/platform/modules/ext/jhall-2.0_05.jar" />
             <property name="javatest.jar" location="${basedir}/release/modules/ext/javatest.jar" />
             <property name="testng.jar" location="${nbplatform.active.dir}/platform/modules/ext/testng-6.8.1-dist.jar" />
             <property name="junit.jar" refid="junit.path" />
             <property name="build.version" value="${jtreg.build.version}" />
             <property name="build.number" value="${jtreg.build.number}" />
        </ant>
        <copy file="${basedir}/jtreg-src-${jtreg.changeset}/dist/jtreg/lib/jtreg.jar" todir="release/modules/ext" />
        <ant dir="jcov-src-${jcov.changeset}/build" inheritAll="false" useNativeBasedir="true">
             <target name="clean" />
             <target name="build" />
             <property name="asmjar5" location="${basedir}/release/modules/ext/asm.jar" />
             <property name="javatestjar" location="${basedir}/release/modules/ext/javatest.jar" />
        </ant>
        <copy file="${basedir}/jcov-src-${jcov.changeset}/JCOV_BUILD/jcov_3.0/jcov.jar" todir="release/modules/ext" />
        <copy file="${basedir}/jcov-src-${jcov.changeset}/JCOV_BUILD/jcov_3.0/jcov_file_saver.jar" todir="release/modules/ext" />
    </target>
    <target name="-check-jtharness-available">
        <condition property="jtharness.available">
             <available file="${basedir}/jtharness-src-${jtharness.changeset}" />
        </condition>
    </target>
    <target name="-download-jtharness" depends="-check-jtharness-available" unless="jtharness.available">
        <mkdir dir="${build.dir}" />
        <property name="jtharness.url" value="http://hg.openjdk.java.net/code-tools/jtharness/archive/${jtharness.changeset}.zip" />
        <get src="${jtharness.url}" dest="${build.dir}/jtharness-${jtharness.changeset}.zip" usetimestamp="true"/>
        <unzip src="${build.dir}/jtharness-${jtharness.changeset}.zip" dest="${basedir}/jtharness-src-${jtharness.changeset}">
            <mapper>
	      <cutdirsmapper dirs="1" />
	    </mapper>
        </unzip>
    </target>
    <target name="-check-asmtools-available">
        <condition property="asmtools.available">
             <available file="${basedir}/asmtools-src-${asmtools.changeset}" />
        </condition>
    </target>
    <target name="-download-asmtools" depends="-check-asmtools-available" unless="asmtools.available">
        <mkdir dir="${build.dir}" />
        <property name="asmtools.url" value="http://hg.openjdk.java.net/code-tools/asmtools/archive/${asmtools.changeset}.zip" />
        <get src="${asmtools.url}" dest="${build.dir}/asmtools-${asmtools.changeset}.zip" usetimestamp="true"/>
        <unzip src="${build.dir}/asmtools-${asmtools.changeset}.zip" dest="${basedir}/asmtools-src-${asmtools.changeset}">
            <mapper>
	      <cutdirsmapper dirs="1" />
	    </mapper>
        </unzip>
    </target>
    <target name="-check-jtreg-available">
        <condition property="jtreg.available">
             <available file="${basedir}/jtreg-src-${jtreg.changeset}" />
        </condition>
    </target>
    <target name="-download-jtreg" depends="-check-jtreg-available" unless="jtreg.available">
        <mkdir dir="${build.dir}" />
        <property name="jtreg.url" value="http://hg.openjdk.java.net/code-tools/jtreg/archive/${jtreg.changeset}.zip" />
        <get src="${jtreg.url}" dest="${build.dir}/jtreg-${jtreg.changeset}.zip" usetimestamp="true"/>
        <unzip src="${build.dir}/jtreg-${jtreg.changeset}.zip" dest="${basedir}/jtreg-src-${jtreg.changeset}">
            <mapper>
	      <cutdirsmapper dirs="1" />
	    </mapper>
        </unzip>
	<patch patchfile="${basedir}/hooks.diff" dir="${basedir}/jtreg-src-${jtreg.changeset}" strip="1" />
    </target>
    <target name="-check-jcov-available">
        <condition property="jcov.available">
             <available file="${basedir}/jcov-src-${jcov.changeset}" />
        </condition>
    </target>
    <target name="-download-jcov" depends="-check-jcov-available" unless="jcov.available">
        <mkdir dir="${build.dir}" />
        <property name="jcov.url" value="http://hg.openjdk.java.net/code-tools/jcov/archive/${jcov.changeset}.zip" />
        <get src="${jcov.url}" dest="${build.dir}/jcov-${jcov.changeset}.zip" usetimestamp="true"/>
        <unzip src="${build.dir}/jcov-${jcov.changeset}.zip" dest="${basedir}/jcov-src-${jcov.changeset}">
            <mapper>
	      <cutdirsmapper dirs="1" />
	    </mapper>
        </unzip>
	<patch patchfile="${basedir}/jcov.diff" dir="${basedir}/jcov-src-${jcov.changeset}" strip="1" />
    </target>
    <target name="-check-asm-available">
        <condition property="asm.available">
             <available file="${basedir}/release/modules/ext/asm.jar" />
        </condition>
    </target>
    <target name="-download-asm" depends="-check-asm-available" unless="asm.available">
        <mkdir dir="${build.dir}" />
        <property name="asm.url" value="http://download.forge.ow2.org/asm/asm-6.0_ALPHA-bin.zip" />
        <get src="${asm.url}" dest="${build.dir}/asm-6.0_ALPHA-bin.zip" usetimestamp="true"/>
        <unzip src="${build.dir}/asm-6.0_ALPHA-bin.zip" dest="${build.dir}/asm-bin">
            <mapper>
	      <cutdirsmapper dirs="1" />
	    </mapper>
        </unzip>
        <copy file="${build.dir}/asm-bin/lib/all/asm-all-6.0_ALPHA.jar" tofile="release/modules/ext/asm.jar" />
    </target>
</project>
